如何做好用例分析
- 目的
  1 看需求文档(分析用例)
  2 做技术leader(分析用例)
  3 做技术项目(分析用例)
  4 更好的做业务(分析用例)
  5 将来当老板(分析用例)

- 重点
  用例是找用户需求的过程, 但是系统设计已经开始了.
  用例就是一个故事

- 什么是用例?
  1 完整性: 拿起手机打王者(拿起手机不作为一个用例)
  2 独立性: 完成某个明确的目标

- 用例的组成
  参与者
    谁与系统交互,谁就是参与者
  注意
    参与者也可能是系统。比如b系统收到a系统的报警后，启动应急方案，自动给切换流量
  用例
    表示完成什么目标，通常是动词短语，比如 做xx，登陆 等等。 用椭圆表示。
  边界
    代表系统。比如用户在支付系统下单，在账户系统登陆，这是两个不同的边界。
    边界对系统设计意义非凡。例如: 系统的耦合发生在经过长期迭代系统间的边界模糊(解决方案: 防腐层、重构...)。再比如: 系统的设计偏离了最初的定位 --边界不明确。
    好的产品界限分明，好的系统架构界限分明，好的类型设计界限分明 --记住这个词: boundary.
    - 扩展: 在boundary间，系统对象的共同的认知是contex。比如react多个组件(boundary)共享数据的，一种方式是用context。
    - 另: 用户在支付系统、营销系统、门店和商品系统中获得优惠券，背后需要一个 跨系统的context。
  关系
    描述用例与用例之间、参与者与用例之间的关系
  关联关系
    定义: 关联关系描述一种驱动做事的关系。
    比如用户登陆，从用户指向登陆。
    比如系统报警，从监控系统(参与者) 指向报警 (用例)。
    比如消息推送，从消息推送(用例) 指向用户(参与者)
  包含关系
    定义: 一个用例包含了其他用例。父用例完成，子用例必须完成。
     ---------<<include>>----------->
    举例: 用户注册 includes 手机号验证
  扩展关系
    ---------<<extend>>----------->
    举例: 
      用户登陆 extend 用户注册
      购买产品 extend 退款
  泛化关系
    泛化(generalization) 是一种一般到特殊的抽象技巧。
    比如:
      变成领域有泛型ts中。 
      动物是哺乳类、鸟类的泛化。
      用例到用例的泛化
         用户支付是 "用支付宝支付", '用微信支付', '用银行卡支付' 的泛化
      参与者到参与者的泛化:
        在开课吧: 用户是讲师、学生、运营人员的泛化。
  用例的收集和整理
    看图
    注意事项:
      核心命题: 用户不知道自己想要什么
      不要诱导: 注意隐蔽意图
      不要提问时承诺
  用例的思考
    复述一遍几种关系?
    思考: include、extend、generalization 和编程中的概念是对应的吗?
    扩展学习
      找产品索要系统的用例图，看看有没有画错
      自己尝试画一下产品用例图，看看能不能从中发现系统的设计问题
      (比如边界不清晰、定位不明确... )

